<?php


namespace App\V1\Admin\Controllers;

use App\V1\Basis\BaseController;
use Dingo\Api\Http\Request;

class IndexController extends BaseController
{
    /**
     * @OA\OpenApi(
     *     @OA\Server(
     *         url="http://fiction.crazypeak.im/api/admin",
     *         description="Fiction API server"
     *     ),
     *     @OA\Info(
     *         version="1.0.0",
     *         title="Fiction Admin",
     *         @OA\Contact(name="Crazypeak")
     *     )
     * )
     * @OA\Schema(
     *     schema="PageModel",
     *     required={"per_page", "last_page", "current_page", "count", "total"},
     *     @OA\Property(
     *         property="data",
     *         description="列表数据",
     *         type="object"
     *     ),
     *     @OA\Property(
     *         property="per_page",
     *         description="每页的数据条数",
     *         type="integer"
     *     ),
     *     @OA\Property(
     *         property="last_page",
     *         description="最后一页的页码",
     *         type="integer"
     *     ),
     *     @OA\Property(
     *         property="current_page",
     *         description="当前页页码",
     *         type="integer"
     *     ),
     *     @OA\Property(
     *         property="count",
     *         description="当前页数据的数量",
     *         type="integer"
     *     ),
     *     @OA\Property(
     *         property="total",
     *         description="数据总数",
     *         type="integer"
     *     )
     * )
     * @OA\Tag(
     *     name="Default",
     *     description="公用接口(#默认)"
     * )
     * @OA\Tag(
     *     name="Category",
     *     description="书本分类模块"
     * )
     * @OA\Tag(
     *     name="Articles",
     *     description="书本模块"
     * )
     * @OA\Tag(
     *     name="Chapters",
     *     description="书本章节模块"
     * )
     * @OA\Tag(
     *     name="Users",
     *     description="用户模块"
     * )
     * @OA\SecurityScheme(
     *   securityScheme="Token",
     *   type="apiKey",
     *   in="header",
     *   name="Authorization"
     * )
     */
    public function index($path = './')
    {
        //你想要哪个文件夹下面的注释生成对应的API文档
        return parent::index(__DIR__); // TODO: Change the autogenerated stub
    }

    /**
     * @OA\Post(
     *     path="/files",
     *     tags={"Default"},
     *     summary="公用上传文件",
     *     security={
     *          {
     *              "Token":{}
     *          }
     *      },
     *     @OA\RequestBody(
     *         @OA\MediaType(
     *             mediaType="multipart/form-data",
     *             @OA\Schema(
     *                 type="object",
     *                 required={"file"},
     *                 @OA\Property(
     *                     property="file",
     *                     description="上传文件对象",
     *                     type="file",
     *                 )
     *             ),
     *         )
     *     ),
     *     @OA\Response(
     *         response=200,
     *         description="SUCCESS/成功",
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(
     *              @OA\Property(property="file_path", type="string", description="文件对象路径"),
     *              @OA\Property(property="file_url", type="string", description="文件访问链接")
     *         )
     *        )
     *     )
     * )
     */

    /**
     * @OA\Get(
     *     path="/captcha",
     *     tags={"Default"},
     *     summary="获取验证码",
     *     @OA\Response(
     *         response=200,
     *         description="SUCCESS/成功",
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(
     *              @OA\Property(property="code", type="integer", description="业务状态码"),
     *              @OA\Property(property="mssgse", type="string", description="描述"),
     *              @OA\Property(property="status_code", type="integer", description="接口状态码"),
     *              @OA\Property(property="version", type="string", description="版本号"),
     *              @OA\Property(property="data",type="object",description="返回数据",
     *                 @OA\Property(property="key",type="string",description="验证码api凭证"),
     *                 @OA\Property(property="img",type="string",description="验证码图片base64")
     *             ),
     *         ),
     *         example={"code": 0,"message": "图形验证码","status_code": 200,"version": "v1","data": {"captcha_url": "http://127.0.0.100/captcha/default?aZduQ0hn"}}
     *        )
     *     )
     * )
     */
    protected function getCaptcha()
    {
        $captcha = app('captcha')->create('default', true);
        $result['key'] = $captcha['key'];
        $result['img'] = $captcha['img'];
        return $this->apiReturn('图形验证码', 200, 0, $result);
    }

    /**
     * @OA\Post(
     *     path="/captcha",
     *     tags={"Default"},
     *     summary="测试验证码用(#非正式接口)",
     *     @OA\RequestBody(
     *         @OA\MediaType(
     *             mediaType="application/x-www-form-urlencoded",
     *             @OA\Schema(
     *                 type="object",
     *                 required={"key","captcha"},
     *                 @OA\Property(
     *                     property="key",
     *                     description="验证码api凭证",
     *                     type="string",
     *                 ),
     *                 @OA\Property(
     *                     property="captcha",
     *                     description="验证码",
     *                     type="string",
     *                 )
     *             ),
     *         )
     *     ),
     *     @OA\Response(
     *         response=200,
     *         description="SUCCESS/成功",
     *         @OA\MediaType(
     *             mediaType="application/json",
     *             @OA\Schema(
     *              @OA\Property(property="code", type="integer", description="业务状态码"),
     *              @OA\Property(property="mssgse", type="string", description="描述"),
     *              @OA\Property(property="status_code", type="integer", description="接口状态码"),
     *              @OA\Property(property="version", type="string", description="版本号"),
     *              @OA\Property(property="data",type="object",description="返回数据"),
     *         )
     *        )
     *     )
     * )
     */
    protected function validateCaptcha(Request $request)
    {
        $validate = captcha_api_check($request->input('captcha'), $request->input('key'));
        return $this->apiReturn('图形验证码', 200, 0, ['validate' => $validate]);
    }
}
